// 238. Product of Array Except Self
// https://leetcode.com/problems/product-of-array-except-self
class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        int i, n = nums.size();
        vector<int> fromBegin(n, 1);
        vector<int> fromEnd(n, 1);
        vector<int> result(n);
        
        fromBegin[0] = nums[0];
        fromEnd[n-1] = nums[n-1];
        for(i=1;i<n;i++) {
            fromBegin[i] = fromBegin[i-1] * nums[i];
            fromEnd[n-i-1] = fromEnd[n-i] * nums[n-i-1];
            //cout << i << ": fromBegin " << fromBegin[i] << " fromEnd " << fromEnd[n-i-1] << endl;  
        }
        
        result[0] = fromEnd[1];
        
        for(i=1;i<n-1;i++) {
            result[i] = fromBegin[i-1] * fromEnd[i+1];
        }
        result[n-1] = fromBegin[n-2];
        
        return result;
    }
};
