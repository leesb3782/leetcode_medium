// 260. Single Number III
// https://leetcode.com/problems/single-number-iii
class Solution {
public:
    vector<int> singleNumber(vector<int>& nums) {
        int axorb = 0;
        int i, len = nums.size(); 
        unsigned int bit = 1;
        vector<int> result(2, 0);
        
        for(i=0;i<len;i++) {
            axorb ^= nums[i];
        }
        
        while((bit & axorb) == 0 && bit > 0) {
            bit<<=1;
        }
        //cout << bit << " " << axorb << endl;
        
        for(i=0;i<len;i++) {
            if((bit & nums[i]) > 0) {
                result[0] ^= nums[i];
            } else {
                result[1] ^= nums[i];
            }
        }
        
        return result;
    }
};
