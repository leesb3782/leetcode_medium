// 144. Binary Tree Preorder Traversal
// https://leetcode.com/problems/binary-tree-preorder-traversal/
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> preorderTraversal(TreeNode* root) {
        stack<TreeNode*> mystack;
        TreeNode* node;
        vector<int> result;
        if(root == NULL)
            return result;
        
        mystack.push(root);
        
        while(!mystack.empty()) {
            node = mystack.top();
            mystack.pop();
            result.push_back(node->val);
            if(node->right!=NULL)
                mystack.push(node->right);
                
            if(node->left!=NULL)
                mystack.push(node->left);
        }
        return result;
        
    }
};
