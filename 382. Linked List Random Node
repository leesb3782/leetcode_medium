// 382. Linked List Random Node
// https://leetcode.com/problems/linked-list-random-node
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    int size = 0;
    ListNode* list;
    /** @param head The linked list's head.
        Note that the head is guaranteed to be not null, so it contains at least one node. */
    Solution(ListNode* head) {
        ListNode* p = head;
        list = head;
        size = 0;
        while(p!=NULL) {
            size++;
            p = p->next;
        }
        //cout << "size: " << size << endl;
        srand (time(NULL));
    }
    
    /** Returns a random node's value. */
    int getRandom() {
        int random = rand() % size;
        int i;
        ListNode* p = list;
        //cout << "random: " << random << endl;
        for(i=0;i<random;i++) {
            p = p->next;
        }
        return p->val;
    }
};

/**
 * Your Solution object will be instantiated and called as such:
 * Solution obj = new Solution(head);
 * int param_1 = obj.getRandom();
 */
