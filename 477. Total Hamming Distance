// 477. Total Hamming Distance
// https://leetcode.com/problems/total-hamming-distance
class Solution {
public:
    int totalHammingDistance(vector<int>& nums) {
        int size = nums.size();
        if(size < 2) return 0;
        int ans = 0;
        int zeroOne[2] = {0};
        int zeroCount, bitCount;
        for(bitCount = 0; bitCount < 32; bitCount++)
        {
            zeroCount = 0;
            zeroOne[0] = 0;
            zeroOne[1] = 0;
            for(int i = 0; i < size; i++)
            {
                if(nums[i] == 0) 
                    zeroCount++;
                zeroOne[nums[i] & 1]++; // check LSB
                nums[i] = nums[i] >> 1; // Move to next LSB
            }
            ans += zeroOne[0] * zeroOne[1]; //p * q
            if(zeroCount == size) 
                break;
        }
        return ans;
    }
};
